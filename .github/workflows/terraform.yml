name: Build and Deploy App

on:
  push:
    branches: [main]
    paths:
      - 'terraform/**'
      - '.github/workflows/terraform.yml'

  workflow_dispatch:

permissions:
  id-token: write
  contents: write     
  pull-requests: write

defaults:
  run: 
    working-directory: ./terraform/environments/${{ github.event.inputs.environment || 'dev' }}  

env:
  AWS_REGION: ${{ vars.AWS_REGION }}
jobs:
  deploy_infrastructure:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'dev' }}

    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ">= 1.12.0"

      - name: Initialize and Select Workspace
        run: |
          ENV="${{ github.event.inputs.environment || 'dev' }}"
          terraform init
          terraform workspace select "$ENV" || terraform workspace new "$ENV"

      - name: Terraform format
        run: terraform fmt -recursive

      - name: Terraform Validate
        run: terraform validate -no-color


      - name: Terraform Plan
        run: |
          env="${{ github.event.inputs.environment || 'dev' }}"
          terraform plan \
            -var="environment=$env" \
            -out=tfplan

      - name: Terraform Apply
        if: github.event_name != 'pull_request'
        run: terraform apply -auto-approve tfplan
