# Flask API Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-flask
  namespace: microservices
  labels:
    app: api-flask
    version: v1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api-flask
  template:
    metadata:
      labels:
        app: api-flask
        version: v1
    spec:
      serviceAccountName: api-flask
      containers:
      - name: api-flask
        image: ECR_REGISTRY/PROJECT_NAME-api-flask:IMAGE_TAG
        ports:
        - containerPort: 5000
          name: http
        env:
        - name: FLASK_ENV
          value: "production"
        - name: FLASK_APP
          value: "app.py"
        - name: PORT
          value: "5000"
        - name: PYTHONUNBUFFERED
          value: "1"
        # Database configuration (if needed)
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: api-flask-secrets
              key: database-url
              optional: true
        # JWT Secret (if using JWT)
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: api-flask-secrets
              key: jwt-secret
              optional: true
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1000
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp-volume
          mountPath: /tmp
        - name: logs-volume
          mountPath: /app/logs
      volumes:
      - name: tmp-volume
        emptyDir: {}
      - name: logs-volume
        emptyDir: {}
      securityContext:
        fsGroup: 1000
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      restartPolicy: Always